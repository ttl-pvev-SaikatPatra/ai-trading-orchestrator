# .github/workflows/orchestrator.yml
name: Trading Orchestrator (IST)

on:
  schedule:
    # Pre-open wake 08:30 IST = 03:00 UTC (Mon–Fri)
    - cron: '0 3 * * 1-5'
    # Universe update 08:45 IST = 03:15 UTC
    - cron: '15 3 * * 1-5'
    # First scan 09:15 IST = 03:45 UTC
    - cron: '45 3 * * 1-5'
    # Scans every :00,:15,:30,:45 during 09:30–13:45 IST = 04:00–08:45 UTC
    - cron: '0,15,30,45 4-8 * * 1-5'
    # Afternoon 14:00–14:45 IST ≈ 08:30–09:15 UTC
    # Scan on :30,:45 and monitor on :31,:46 to avoid collision
    - cron: '30,45 9 * * 1-5'
    - cron: '31,46 9 * * 1-5'
    # Optional final scan near 14:55 IST = 09:25 UTC
    - cron: '25 9 * * 1-5'
    # EOD exit 15:10 IST = 09:40 UTC
    - cron: '40 9 * * 1-5'
  workflow_dispatch:

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    steps:
      - name: Orchestrate cron calls (wake + retries/backoff)
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${{ secrets.BOT_URL }}" ]; then
            echo "BOT_URL secret missing"; exit 1
          fi

          # Curl with retries and exponential backoff; do not fail workflow on last try
          curl_retry() {
            local method="$1"; shift
            local url="$1"; shift
            local attempts=5
            local delay=3
            for ((i=1;i<=attempts;i++)); do
              if curl -sS -X "$method" "$url" --connect-timeout 12 --max-time 75 --retry 0 --fail; then
                return 0
              fi
              echo "WARN: $url attempt $i failed; backoff ${delay}s" >&2
              sleep "$delay"
              delay=$((delay*2))
            done
            echo "WARN: $url failed after retries" >&2
            return 0
          }

          # Wake instance before deciding actions (two quick probes)
          curl -sS --connect-timeout 5  --max-time 10 "${{ secrets.BOT_URL }}/health" || true
          curl -sS --connect-timeout 12 --max-time 60 "${{ secrets.BOT_URL }}/health" || true

          # India time snapshot (cron is UTC)
          IST_HH=$(TZ='Asia/Kolkata' date +%H)
          IST_MM=$(TZ='Asia/Kolkata' date +%M)
          IST_HHMM=$(TZ='Asia/Kolkata' date +%H:%M)
          IST_DOW=$(TZ='Asia/Kolkata' date +%u)  # 1=Mon..7=Sun
          echo "IST now: $IST_HH:$IST_MM (DoW=$IST_DOW)"

          # Skip weekends (defense in depth)
          if [ "$IST_DOW" -gt 5 ]; then
            echo "Weekend; exit"
            exit 0
          fi

          plan=()

          # Pre-open 08:30 IST — refresh account, verify auth
          if [ "$IST_HHMM" = "08:30" ]; then
            plan+=("POST:/cron/account-update" "POST:/cron/auth-check")
          fi

          # Universe update 08:45 IST
          if [ "$IST_HHMM" = "08:45" ]; then
            plan+=("POST:/cron/universe-update" "GET:/health")
          fi

          # Market window 09:15–15:15 IST
          in_market=false
          if [ "$IST_HH" -ge 9 ] && [ "$IST_HH" -le 15 ]; then
            if { [ "$IST_HH" -gt 9 ] || { [ "$IST_HH" -eq 9 ] && [ "$IST_MM" -ge 15 ]; }; } \
               && { [ "$IST_HH" -lt 15 ] || { [ "$IST_HH" -eq 15 ] && [ "$IST_MM" -lt 15 ]; }; }; then
              in_market=true
            fi
          fi

          if [ "$in_market" = true ]; then
            # Quarter-hour scans + :55
            if [ "$IST_MM" -eq 0 ] || [ "$IST_MM" -eq 15 ] || [ "$IST_MM" -eq 30 ] || [ "$IST_MM" -eq 45 ] || [ "$IST_MM" -eq 55 ]; then
              plan+=("POST:/cron/scan-opportunities")
            fi
            # Monitor every tick in window
            plan+=("POST:/cron/monitor-positions")
          fi

          # EOD exit 15:10 IST safeguard
          if [ "$IST_HHMM" = "15:10" ]; then
            plan+=("POST:/cron/eod-exit")
          fi

          # Always health check
          plan+=("GET:/cron/health-check")

          echo "Planned: ${plan[*]}"

          for item in "${plan[@]}"; do
            method="${item%%:*}"
            path="${item#*:}"
            url="${{ secrets.BOT_URL }}${path}"
            echo "➡️  $method $path"
            curl_retry "$method" "$url"
            sleep 1
          done

          echo "✅ Orchestration cycle complete"
